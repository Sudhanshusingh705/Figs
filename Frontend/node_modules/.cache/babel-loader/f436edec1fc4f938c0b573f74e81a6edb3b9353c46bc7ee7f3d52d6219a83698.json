{"ast":null,"code":"import axios from 'axios';\nimport { LOCAL_STORAGE_KEYS } from '../constants/api';\n\n// Create an axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token to all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(LOCAL_STORAGE_KEYS.AUTH_TOKEN);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling common errors\napi.interceptors.response.use(response => response.data, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Handle token expiration and auto refresh\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem(LOCAL_STORAGE_KEYS.REFRESH_TOKEN);\n      if (refreshToken) {\n        // Try to get a new token using the refresh token\n        const response = await axios.post('http://localhost:5000/api/auth/refresh-token', {\n          refreshToken\n        });\n        const {\n          token\n        } = response.data;\n        localStorage.setItem(LOCAL_STORAGE_KEYS.AUTH_TOKEN, token);\n\n        // Update the authorization header\n        originalRequest.headers['Authorization'] = `Bearer ${token}`;\n        return axios(originalRequest);\n      }\n    } catch (refreshError) {\n      // If refresh token is invalid, redirect to login\n      localStorage.removeItem(LOCAL_STORAGE_KEYS.AUTH_TOKEN);\n      localStorage.removeItem(LOCAL_STORAGE_KEYS.REFRESH_TOKEN);\n      localStorage.removeItem(LOCAL_STORAGE_KEYS.USER);\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // For all other errors, just reject with the error\n  return Promise.reject(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n});\n\n// Helper methods for API requests\nconst apiService = {\n  get: (url, params) => api.get(url, {\n    params\n  }),\n  post: (url, data) => api.post(url, data),\n  put: (url, data) => api.put(url, data),\n  patch: (url, data) => api.patch(url, data),\n  delete: url => api.delete(url),\n  // File upload with multipart/form-data\n  upload: (url, formData) => {\n    return api.post(url, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","LOCAL_STORAGE_KEYS","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","AUTH_TOKEN","error","Promise","reject","response","data","_error$response","originalRequest","status","_retry","refreshToken","REFRESH_TOKEN","post","setItem","refreshError","removeItem","USER","window","location","href","apiService","get","url","params","put","patch","delete","upload","formData"],"sources":["C:/Users/Sudha/OneDrive/Desktop/Figs/Frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { LOCAL_STORAGE_KEYS } from '../constants/api';\r\n\r\n// Create an axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token to all requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(LOCAL_STORAGE_KEYS.AUTH_TOKEN);\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for handling common errors\r\napi.interceptors.response.use(\r\n  (response) => response.data,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Handle token expiration and auto refresh\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem(LOCAL_STORAGE_KEYS.REFRESH_TOKEN);\r\n        \r\n        if (refreshToken) {\r\n          // Try to get a new token using the refresh token\r\n          const response = await axios.post('http://localhost:5000/api/auth/refresh-token', {\r\n            refreshToken,\r\n          });\r\n          \r\n          const { token } = response.data;\r\n          localStorage.setItem(LOCAL_STORAGE_KEYS.AUTH_TOKEN, token);\r\n          \r\n          // Update the authorization header\r\n          originalRequest.headers['Authorization'] = `Bearer ${token}`;\r\n          return axios(originalRequest);\r\n        }\r\n      } catch (refreshError) {\r\n        // If refresh token is invalid, redirect to login\r\n        localStorage.removeItem(LOCAL_STORAGE_KEYS.AUTH_TOKEN);\r\n        localStorage.removeItem(LOCAL_STORAGE_KEYS.REFRESH_TOKEN);\r\n        localStorage.removeItem(LOCAL_STORAGE_KEYS.USER);\r\n        window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    // For all other errors, just reject with the error\r\n    return Promise.reject(error.response?.data || error);\r\n  }\r\n);\r\n\r\n// Helper methods for API requests\r\nconst apiService = {\r\n  get: (url, params) => api.get(url, { params }),\r\n  post: (url, data) => api.post(url, data),\r\n  put: (url, data) => api.put(url, data),\r\n  patch: (url, data) => api.patch(url, data),\r\n  delete: (url) => api.delete(url),\r\n  \r\n  // File upload with multipart/form-data\r\n  upload: (url, formData) => {\r\n    return api.post(url, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport default apiService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}